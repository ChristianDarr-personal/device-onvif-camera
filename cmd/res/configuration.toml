[Writable]
LogLevel = "INFO"
  # Example InsecureSecrets configuration that simulates SecretStore for when EDGEX_SECURITY_SECRET_STORE=false
  # InsecureSecrets are required for when Redis is used for message bus
  [Writable.InsecureSecrets]
    [Writable.InsecureSecrets.DB]
    path = "redisdb"
      [Writable.InsecureSecrets.DB.Secrets]
    [Writable.InsecureSecrets.Camera001]
    path = "credentials001"
      [Writable.InsecureSecrets.Camera001.Secrets]
      username = "administrator"
      password = "Password1!"
    # If having more than one camera, uncomment the following config settings
    [Writable.InsecureSecrets.Camera002]
    path = "credentials002"
      [Writable.InsecureSecrets.Camera002.Secrets]
      username = "administrator"
      password = "Password1!"

[Service]
HealthCheckInterval = "10s"
Host = "0.0.0.0"
Port = 59985
ServerBindAddr = "0.0.0.0"  # blank value defaults to Service.Host value
StartupMsg = "Camera device service started"
# MaxRequestSize limit the request body size in byte of put command
MaxRequestSize = 0 # value 0 unlimit the request size.
RequestTimeout = "5s"

# Only used when EDGEX_SECURITY_SECRET_STORE=true which is now required for secure consul
[SecretStore]
Type = "vault"
Host = "localhost"
Port = 8200
Path = "device-onvif-camera/"
Protocol = "http"
RootCaCertPath = ""
ServerName = ""
TokenFile = "/tmp/edgex/secrets/device-onvif-camera/secrets-token.json"
  [SecretStore.Authentication]
  AuthType = "X-Vault-Token"

[Registry]
Type = "consul"
Host = "localhost"
Port = 8500

[Clients]
  [Clients.core-data]
  Protocol = "http"
  Host = "localhost"
  Port = 59880

  [Clients.core-metadata]
  Protocol = "http"
  Host = "localhost"
  Port = 59881

[MessageQueue]
Protocol = "redis"
Host = "localhost"
Port = 6379
Type = "redis"
AuthMode = "usernamepassword"  # required for redis messagebus (secure or insecure).
SecretName = "redisdb"
PublishTopicPrefix = "edgex/events/device" # /<device-profile-name>/<device-name>/<source-name> will be added to this Publish Topic prefix
  [MessageQueue.Optional]
  # Default MQTT Specific options that need to be here to enable environment variable overrides of them
  # Client Identifiers
  ClientId = "device-onvif-camera"
  # Connection information
  Qos = "0" # Quality of Sevice values are 0 (At most once), 1 (At least once) or 2 (Exactly once)
  KeepAlive = "10" # Seconds (must be 2 or greater)
  Retained = "false"
  AutoReconnect = "true"
  ConnectTimeout = "5" # Seconds
  SkipCertVerify = "false" # Only used if Cert/Key file or Cert/Key PEMblock are specified

[Device]
DataTransform = true
MaxCmdOps = 128
MaxCmdValueLen = 256
ProfilesDir = "./res/profiles"
DevicesDir = "./res/devices"
UpdateLastConnected = false
EnableAsyncReadings = true
AsyncBufferSize = 16
Labels = []
UseMessageBus = true
  [Device.Discovery]
  Enabled = true
  Interval = "30s"

# Driver configs
[Driver]
CredentialsRetryTime = "120" # Seconds
CredentialsRetryWait = "1" # Seconds
RequestTimeout = "5" # Seconds
DiscoveryEthernetInterface = "en0"
DefaultAuthMode = "usernametoken"
DefaultSecretPath = "credentials001"
# BaseNotificationURL indicates the device service network location
BaseNotificationURL = "http://127.0.0.1:59985"

# List of IPv4 subnets to perform LLRP discovery process on, in CIDR format (X.X.X.X/Y)
# separated by commas ex: "192.168.1.0/24,10.0.0.0/24"
DiscoverySubnets = ""

# Maximum simultaneous network probes
ProbeAsyncLimit = "4000"

# Maximum amount of seconds to wait for each IP probe before timing out.
# This will also be the minimum time the discovery process can take.
ProbeTimeoutSeconds = "2"

# Port to scan for devices on
ScanPorts = "2020"

# Maximum amount of seconds the discovery process is allowed to run before it will be cancelled.
# It is especially important to have this configured in the case of larger subnets such as /16 and /8
MaxDiscoverDurationSeconds = "300"
